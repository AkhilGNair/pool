\docType{data}
\name{Pool}
\alias{Pool}
\alias{closePool}
\alias{closePool,Pool-method}
\alias{createPool}
\alias{createPool,DBIConnectionFactory-method}
\alias{createPool,DBIDriver-method}
\title{Pool Class.}
\usage{
createPool(drv, minSize = 3, maxSize = Inf, ...)

closePool(pool)
}
\arguments{
\item{drv}{The driver used to connect to the generator of
the objects that the pool will hold.}

\item{minSize}{An optional number specifying the minimum
number of objects that the pool should have at all times.}

\item{maxSize}{An optional number specifying the maximum
number of objects that the pool should have at all times.}

\item{...}{Authorization arguments needed by the object
instance generated by the \code{drv}. For more info, see
\code{\link[DBI]{dbConnect}}}

\item{pool}{A Pool object previsouly created with
\code{createPool}.}
}
\description{
A generic pool class that holds objects. These can be fetched
from the pool and released back to it at will, with very
little computaional cost. The pool should be created only once
and closed when it is no longer needed, to prevent leaks.
}
\examples{
\dontrun{
pool <- createPool(
  drv = MySQL(),
  dbname = "shinydemo",
  host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
  username = "guest",
  password = "guest"
)

dbGetQuery(pool, "SELECT * from City WHERE ID < 5")
#>   ID           Name CountryCode      District Population
#> 1  1          Kabul         AFG         Kabol    1780000
#> 2  2       Qandahar         AFG      Qandahar     237500
#> 3  3          Herat         AFG         Herat     186800
#> 4  4 Mazar-e-Sharif         AFG         Balkh     127800

closePool(pool)
}
}
\seealso{\code{poolFetch}, \code{poolReturn}}
\keyword{datasets}

